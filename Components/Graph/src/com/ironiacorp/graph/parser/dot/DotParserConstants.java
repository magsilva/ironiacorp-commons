/* Generated By:JavaCC: Do not edit this line. DotParserConstants.java */
package com.ironiacorp.graph.parser.dot;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface DotParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int GRAPH = 6;
  /** RegularExpression Id. */
  int NODE = 7;
  /** RegularExpression Id. */
  int DIRECTED_EDGE = 8;
  /** RegularExpression Id. */
  int UNIDIRECTED_EDGE = 9;
  /** RegularExpression Id. */
  int DIGRAPH = 10;
  /** RegularExpression Id. */
  int POS = 11;
  /** RegularExpression Id. */
  int BBOX = 12;
  /** RegularExpression Id. */
  int LPAREN = 13;
  /** RegularExpression Id. */
  int RPAREN = 14;
  /** RegularExpression Id. */
  int LBRACE = 15;
  /** RegularExpression Id. */
  int RBRACE = 16;
  /** RegularExpression Id. */
  int LBRACKET = 17;
  /** RegularExpression Id. */
  int RBRACKET = 18;
  /** RegularExpression Id. */
  int SEMICOLON = 19;
  /** RegularExpression Id. */
  int COMMA = 20;
  /** RegularExpression Id. */
  int DOT = 21;
  /** RegularExpression Id. */
  int EQUALS = 22;
  /** RegularExpression Id. */
  int QUOTE = 23;
  /** RegularExpression Id. */
  int GT = 24;
  /** RegularExpression Id. */
  int LT = 25;
  /** RegularExpression Id. */
  int HOOK = 26;
  /** RegularExpression Id. */
  int COLON = 27;
  /** RegularExpression Id. */
  int EQ = 28;
  /** RegularExpression Id. */
  int LE = 29;
  /** RegularExpression Id. */
  int GE = 30;
  /** RegularExpression Id. */
  int NE = 31;
  /** RegularExpression Id. */
  int PLUS = 32;
  /** RegularExpression Id. */
  int MINUS = 33;
  /** RegularExpression Id. */
  int STAR = 34;
  /** RegularExpression Id. */
  int SLASH = 35;
  /** RegularExpression Id. */
  int REM = 36;
  /** RegularExpression Id. */
  int POWER = 37;
  /** RegularExpression Id. */
  int LETTER = 38;
  /** RegularExpression Id. */
  int DIGIT = 39;
  /** RegularExpression Id. */
  int NODEIDENT = 40;
  /** RegularExpression Id. */
  int IDENTIFIER = 41;
  /** RegularExpression Id. */
  int STRING = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"graph\"",
    "\"node\"",
    "\"->\"",
    "\"--\"",
    "\"digraph\"",
    "\"pos\"",
    "\"bb\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"\\\"\"",
    "\">\"",
    "\"<\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"**\"",
    "<LETTER>",
    "<DIGIT>",
    "<NODEIDENT>",
    "<IDENTIFIER>",
    "<STRING>",
  };

}
