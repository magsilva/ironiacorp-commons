/* Generated By:JavaCC: Do not edit this line. DotParserConstants.java */
/*
 * Copyright (C) 2011 Marco Aur√©lio Graciotto Silva <magsilva@ironiacorp.com>
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.ironiacorp.graph.parser.dot;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface DotParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int GRAPH = 6;
  /** RegularExpression Id. */
  int DIGRAPH = 7;
  /** RegularExpression Id. */
  int SUBGRAPH = 8;
  /** RegularExpression Id. */
  int DEFAULT_PROPERTY_NODE = 9;
  /** RegularExpression Id. */
  int DEFAULT_PROPERTY_EDGE = 10;
  /** RegularExpression Id. */
  int EDGE = 11;
  /** RegularExpression Id. */
  int DIRECTED_EDGE = 12;
  /** RegularExpression Id. */
  int STRICT = 13;
  /** RegularExpression Id. */
  int LETTER = 14;
  /** RegularExpression Id. */
  int DIGIT = 15;
  /** RegularExpression Id. */
  int NODEIDENT = 16;
  /** RegularExpression Id. */
  int IDENTIFIER = 17;
  /** RegularExpression Id. */
  int STRING = 18;
  /** RegularExpression Id. */
  int LPAREN = 19;
  /** RegularExpression Id. */
  int RPAREN = 20;
  /** RegularExpression Id. */
  int LBRACE = 21;
  /** RegularExpression Id. */
  int RBRACE = 22;
  /** RegularExpression Id. */
  int LBRACKET = 23;
  /** RegularExpression Id. */
  int RBRACKET = 24;
  /** RegularExpression Id. */
  int SEMICOLON = 25;
  /** RegularExpression Id. */
  int COMMA = 26;
  /** RegularExpression Id. */
  int DOT = 27;
  /** RegularExpression Id. */
  int EQUALS = 28;
  /** RegularExpression Id. */
  int QUOTE = 29;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"graph\"",
    "\"digraph\"",
    "\"subgraph\"",
    "\"node\"",
    "\"edge\"",
    "\"--\"",
    "\"->\"",
    "\"strict\"",
    "<LETTER>",
    "<DIGIT>",
    "<NODEIDENT>",
    "<IDENTIFIER>",
    "<STRING>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"\\\"\"",
  };

}
